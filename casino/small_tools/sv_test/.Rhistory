real <- paste("/ibios/co02/chen/enhancer/results/analysis/",coh,"_score.bed",sep="")
rand <- paste("/ibios/co02/chen/random/results/analysis/",coh,"_score.bed",sep="")
a <- read.table(real,header=F,sep="\t",comment.char="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
dim(a)
dim(b)
tail(a)
tail(b)
length(xs)
colnames(a)<- c("chr","start","end","snv_score","cnv_score","length","mul_score")
colnames(b) <- c("chr","start","end","snv_score")
xs<-b$snv_score
ys<-a$snv_score
lims <- c(0,max(range(x)[2],range(y)[2]))
sx <- sort(xs)
sy <- sort(ys)
lenx <- length(sx)
leny <- length(sy)
if (leny < lenx)sx <- approx(1L:lenx, sx, n = leny)$y
if (leny > lenx)sy <- approx(1L:leny, sy, n = lenx)$y
lenx
leny
tail(a)
tail(b)
a<-a[-463563,]
tail(a)
head(info_new)
dim(info_new)
dim(a)
tail(info_new)
info_new<-info_new[-463563,]
a[20000,]
info_new[20000,]
df1 <- data.frame(a$snv_score,info_new$gene)
head(df1)
head(sx)
tail(sx)
df2<-df1[ order(-df1$a.snv_score), ]
head(df2)
max(df1$a.snv_score)
max(sx)
max(a$snv_score)
colnames(df2)<-c("real","gene")
head(df2)
df2$random<-sort(b$snv_score)
head(df2)
df1 <- data.frame(a$snv_score,info_new$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("real","gene")
df2$random<-sort(b$snv_score)
head(df2)
tail(df2)
df2$var<-df2$real^2-df2$random^2
head(df2)
tail(df2)
xs<-b$snv_score
ys<-a$snv_score
lims <- c(0,max(range(x)[2],range(y)[2]))
sx <- sort(xs)
sy <- sort(ys)
lenx <- length(sx)
leny <- length(sy)
if (leny < lenx)sx <- approx(1L:lenx, sx, n = leny)$y
if (leny > lenx)sy <- approx(1L:leny, sy, n = lenx)$y
#print(ggplot() + geom_point(aes(x=sx, y=sy)) + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+ggtitle(coh))
print(ggplot() + geom_point(aes(x=sx, y=sy)) + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_text(aes(label=ifelse(y>min(tail(sort(y),10)),"tops","")),hjust=0,vjust=0))
df<-data.frame(sx,sy)
tail(df)
tail(df2)
head(df2)
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
lims
print(ggplot(df2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_text(aes(label=ifelse(var>min(tail(sort(var),10)),as.character(gene),"")),hjust=0,vjust=0))
lims
df3 <- df2
gsub(".","",df3$gene)
head(df3)
df3$gene <- gsub(".","",df3$gene)
head(df3)
table(df3$gene)
df3 <- df2
df3$gene <- gsub("\.","",df3$gene)
df3$gene <- gsub("/.","",df3$gene)
head(df3)
df3<-df2
df3$gene <- gsub("\\.","",df3$gene)
head(df3)
df3$gene <- gsub("NA;","",df3$gene)
df3$gene <- gsub(";NA","",df3$gene)
head(df3)
df2$var<-df2$real^2-df2$random^2
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
df2$gene <- gsub("\\.","",df2$gene)
df2$gene <- gsub("NA;","",df2$gene)
df2$gene <- gsub(";NA","",df2$gene)
df3$gene <- gsub("NA","",df3$gene)
print(ggplot(df2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_text(aes(label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),hjust=0,vjust=0))
pdf("/home/hongc/tests2.pdf")
par(mfrow = c(3, 2))
cohs <- c("PBCA-DE","PACA-AU","PACA-CA","PAEN-AU","OV-AU","OV-US","BRCA-EU","BRCA-UK","EOPC-DE","PRAD-US","PRAD-UK")
info <- read.table("/ibios/co02/chen/enhancer/info/uni_enh_gene.txt",header=F,col.names=c("chr","start","end","gene"),sep="\t")
info_new <- info[which(info$chr!="X"),]
info_new<-info_new[-463563,]
#cohs <- c("PBCA-DE","PACA-AU")
i=0
pltlist <- list()
for (coh in cohs){
i = i+1
real <- paste("/ibios/co02/chen/enhancer/results/analysis/",coh,"_score.bed",sep="")
rand <- paste("/ibios/co02/chen/random/results/analysis/",coh,"_score.bed",sep="")
a <- read.table(real,header=F,sep="\t",comment.char="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
colnames(a)<- c("chr","start","end","snv_score","cnv_score","length","mul_score")
colnames(b) <- c("chr","start","end","snv_score")
a<-a[-463563,]
df1 <- data.frame(a$snv_score,info_new$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("real","gene")
df2$random<-sort(b$snv_score)
df2$var<-df2$real^2-df2$random^2
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
df2$gene <- gsub("\\.","",df2$gene)
df2$gene <- gsub("NA;","",df2$gene)
df2$gene <- gsub(";NA","",df2$gene)
df2$gene <- gsub("NA","",df2$gene)
#print(ggplot() + geom_point(aes(x=sx, y=sy)) + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+ggtitle(coh))
print(ggplot(df2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_text(aes(label=ifelse(var>min(tail(sort(var),10)),as.character(gene),"")),hjust=0,vjust=0))
}
coh<-"EOPC-DE"
real <- paste("/ibios/co02/chen/enhancer/results/analysis/",coh,"_score.bed",sep="")
rand <- paste("/ibios/co02/chen/random/results/analysis/",coh,"_score.bed",sep="")
a <- read.table(real,header=F,sep="\t",comment.char="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
colnames(a)<- c("chr","start","end","snv_score","cnv_score","length","mul_score")
colnames(b) <- c("chr","start","end","snv_score")
a<-a[-463563,]
df1 <- data.frame(a$snv_score,info_new$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("real","gene")
df2$random<-sort(b$snv_score)
df2$var<-df2$real^2-df2$random^2
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
df2$gene <- gsub("\\.","",df2$gene)
df2$gene <- gsub("NA;","",df2$gene)
df2$gene <- gsub(";NA","",df2$gene)
df2$gene <- gsub("NA","",df2$gene)
#print(ggplot() + geom_point(aes(x=sx, y=sy)) + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+ggtitle(coh))
print(ggplot(df2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_text(aes(label=ifelse(var>min(tail(sort(var),10)),as.character(gene),"")),hjust=0,vjust=0))
lims
coh
print(ggplot(df2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_text(aes(label=ifelse(var>min(tail(sort(var),10)),as.character(gene),"")),hjust=0,vjust=0))
plot(x=1,y=2)
print(ggplot(df2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_text(aes(label=ifelse(var>min(tail(sort(var),10)),as.character(gene),"")),hjust=0,vjust=0))
lims
coh<-"EOPC-DE"
library(ggplot2)
library(grid)
library(gridExtra)
library(directlabels)
pdf(paste("/home/hongc/plot_results2/",coh,".pdf",sep=""))
real <- paste("/ibios/co02/chen/enhancer2/results/analysis/",coh,"_score.bed",sep="")
a <- read.table(real,header=F,sep="\t",comment.char="")
colnames(a)<- c("chr","start","end","gene","snv_score","cnv_score","length","mul_score")
rand <- paste("/ibios/co02/chen/random_10turns/results/analysis/",coh,"_score_snv1.bed",sep="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
colnames(b) <- c("chr","start","end","gene","snv_score")
df1 <- data.frame(a$snv_score,a$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("real","gene")
df2$random<-sort(b$snv_score)
df2$var<-df2$real^2-df2$random^2
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
ns1 <- df2
p1 <- (ggplot(ns1,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_dl(aes(label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),method="smart.grid"))
rand <- paste("/ibios/co02/chen/random_10turns/results/analysis/",coh,"_score_snv2.bed",sep="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
colnames(b) <- c("chr","start","end","gene","snv_score")
df1 <- data.frame(a$snv_score,a$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("real","gene")
df2$random<-sort(b$snv_score)
df2$var<-df2$real^2-df2$random^2
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
ns2 <- df2
View(ns1)
View(ns2)
all(ns1 == ns2)
head(S1)
head(NS1)
head(ns1)
max(ns1$var)
table(ns1$var)
p2 <- (ggplot(ns2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(coh)+geom_dl(aes(size=5,label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),method="smart.grid"))
p2
dev.off()
pdf(paste("/home/hongc/plot_results/",coh,".pdf",sep=""))
p2 <- (ggplot(ns2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t2"))+geom_dl(aes(size=5,label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("smart.grid",fontsize=0.5)))
p2
dev.off()
pdf(paste("/home/hongc/plot_results/",coh,".pdf",sep=""))
p2 <- (ggplot(ns2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t2"))+geom_dl(aes(size=5,label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("smart.grid",cex=0.5)))
p2
dev.off()
p2
1+1
p2+theme(legend.position="none")
1+1
p2 <- (ggplot(ns2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t2"))+geom_dl(aes(size=5,label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("last.qp",cex=0.5)))
p2
p2 <- (ggplot(ns2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t2"))+geom_dl(aes(size=5,label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("smart.grid",cex=0.5)))
p2 <- (ggplot(ns2,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t2"))+geom_dl(aes(size=5,label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("smart.grid",cex=0.1)))
p2
1+1
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",row.names=T,col.names=T)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",row.names=T,col.names=T,fill=T)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",row.names=T,col.names=T,fill=T)
a<-read.table("/home/hongc/project/test_output.txt",row.names=T,col.names=T,fill=T)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",fill=T)
head(a)
View(a)
library(ggplot2)
p<-ggplot(a)
p
p+geom_tile()
a.m <- melt(a)
library(reshape2)
a.m <- melt(a)
head(a.m)
?melt
a.m <- melt(a,id=row.names)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",fill=T,row.names=F,col.names=F)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",fill=T,row.names=F)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",fill=T,row.names=FALSE)
head(a)
b<-matrix(a)
head(b)
b<-as.matrix(a)
head(b)
c<-melt(b)
head(c)
p<-ggplot(c,aes(Var1,Var2))
p+geom_tile(aes(fill=value),color="white")+geom_fill_gradient(low="white",high="blue")
p+geom_tile(aes(fill=value),color="white")+scale_fill_gradient(low="white",high="blue")
p<-ggplot(c,aes(Var2,Var1))
p+geom_tile(aes(fill=value),color="white")+scale_fill_gradient(low="white",high="blue")
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",fill=T)
b<-as.matrix(a)
c<-melt(b)
head(c)
head(a)
head(b)
View(a)
View(a)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",fill=T,header=T)
head(a)
b<-as.matrix(a)
head(b)
c<-melt(b)
head(c)
c<-melt(b,id=ensg)
head(c)
head(a)
View(a)
c<-melt(a)
head(c)
p<-ggplot(c,aes(variable,ensg))
p+geom_tile(aes(fill=value),color="white")+scale_fill_gradient(low="white",high="blue")
p+geom_tile(aes(fill=value),color="white")+scale_fill_gradient(low="white",high="red")
library(ggplot2)
library(reshape2)
a<-read.table("/home/hongc/project/test_output.txt",sep="\t",fill=T,header=T)
b<-as.matrix(a)
c<-melt(b)
head(c)
head(a)
head(b)
c = melt(b)
c
c<-melt(a)
head(c)
pdf("/home/hongc/qqplot_tops/test1.pdf")
p<-ggplot(c,aes(variable,ensg))
p+geom_tile(aes(fill=value),color="white")+scale_fill_gradient(low="white",high="red")
dev.off()
coh="SARC-US"
filein1 <- paste("/home/hongc/qqplot_candidates/",coh,"_output1.txt",sep="")
filein2 <- paste("/home/hongc/qqplot_candidates/",coh,"_output2.txt",sep="")
a<-read.table(filein1,sep="\t",fill=T,header=T)
b<-as.matrix(a)
c<-melt(a)
p1<-ggplot(c,aes(variable,ensg))
p1+geom_tile(aes(fill=value),color="white")+scale_fill_gradient(low="white",high="red")+ggtitle('top_genes')+xlab("patients")+ylab("")+scale_x_discrete(breaks=NULL)
p1+geom_tile(aes(fill=value),color="white")+scale_fill_discrete(low="white",high="red")+ggtitle('top_genes')+xlab("patients")+ylab("")+scale_x_discrete(breaks=NULL)
p1+geom_tile(aes(fill=value),color="white")+scale_fill_continuous(breaks=c(-1,0,1),lables=c("down","no","up"))+ggtitle('top_genes')+xlab("patients")+ylab("")+scale_x_discrete(breaks=NULL)
p1+geom_tile(aes(fill=value),color="white")+scale_fill_continuous(breaks=c(-1,0,1),labels=c("down","no","up"))+ggtitle('top_genes')+xlab("patients")+ylab("")+scale_x_discrete(breaks=NULL)
p1+geom_tile(aes(fill=value),color="white")+scale_fill_continuous(breaks=c(-1,0,1),labels=c("down","no","up"),color="red")+ggtitle('top_genes')+xlab("patients")+ylab("")+scale_x_discrete(breaks=NULL)
p1+geom_tile(aes(fill=value),color="white")+scale_fill_continuous(breaks=c(-1,0,1),labels=c("down","no","up"),high="red",low="white")+ggtitle('top_genes')+xlab("patients")+ylab("")+scale_x_discrete(breaks=NULL)
head(a)
coh <- "PRAD-US"
library(ggplot2)
library(grid)
library(gridExtra)
library(directlabels)
real <- paste("/ibios/co02/chen/enhancer2/results/analysis/",coh,"_score.bed",sep="")
a <- read.table(real,header=F,sep="\t",comment.char="")
colnames(a)<- c("chr","start","end","gene","snv_score","cnv_score","length","mul_score")
rand <- paste("/ibios/co02/chen/random_10turns/results/analysis/",coh,"_score_snv1.bed",sep="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
colnames(b) <- c("chr","start","end","gene","snv_score")
df1 <- data.frame(a$chr,a$start,a$end,a$snv_score,a$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("chr","start","end","real","gene")
df2$random<-sort(b$snv_score)
head(df2)
df2$var<-df2$real-df2$random
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
ns1 <- df2
head(ns1)
head(ns1)
View(ns1)
write.table(head(ns1[order(-ns1$var),],20),file=paste("/home/hongc/qqplot_top_t1_",coh,".txt",sep=""),quote=F,row.names=F)
snv <- read.table("/ibios/co02/chen/enhancer/results/analysis/EOPC-DE_snv.bed",header=T,comment.char="")
colnames(snv)[1] <- "chromosome"
View(snv)
snv <- snv[which(snv$chromosome!="X"),]
s0 <- snv[-nrow(snv),]
s1 <- s0[-c(1,2,3,4)]
View(`s1`)
nopid<-dim(s1)[2]
ss<-sapply(s1,function(x)-log((sum(x)-x+1)/(sum(x)+1),base=10))*(1/(nopid))
ss2<-data.frame(ss)
View(ss2)
ss2$sum <- rowSums(ss)
snv_scored <- cbind(s0[c(1,2,3,4)],ss2$sum)
View(snv_scored)
snv_scored$length<-snv_scored$end-snv_scored$start
head(snv_scored$end)
View(snv_scored)
View(`s0`)
s0$length<-s0$end-s0$start
head(s0)
s0$length<-s0[3]-s0[2]
head(s0)
View(ss2)
View(snv_scored)
type(snv_scored$start)
typeof(snv_scored$start)
snv_scored$start
snv_scored$length<-snv_scored$end-snv_scored$start
snv_scored$length<-snv_scored$end + 2
View(snv_scored)
snv_scored$length<-as.numeric(snv_scored$end)-as.numberic(snv_scored$start)
snv_scored$length<-as.numeric(snv_scored$end)-as.numeric(snv_scored$start)
View(snv_scored)
colnames(snv_scored)[5] <- "snv_score"
View(snv_scored)
View(`s0`)
View(`s1`)
View(`s0`)
View(snv)
View(`s0`)
View(snv)
snv_scored$score<-as.numeric(snv_scored$snv_score)/as.numeric(snv_scored$length)*1000
View(snv_scored)
snv_scored$length<-as.integer(snv_scored$end)-as.integer(snv_scored$start)
View(snv_scored)
snv_scored$length<-as.numeric(as.character(snv_scored$end))-as.numeric(as.character(snv_scored$start))
View(snv_scored)
snv_scored$score<-as.numeric(as.character(snv_scored$snv_score))/as.numeric(as.character(snv_scored$length))*1000
View(snv_scored)
table(snv_scored$score)
library(ggplot2)
library(grid)
library(gridExtra)
library(directlabels)
options(echo=TRUE)
args<-commandArgs(trailingOnly=TRUE)
coh<-"PRAD-US"
#coh<-args[1]
analysis_path="/ibios/co02/chen/casino/results/analysis/"
real<-paste(analysis_path,coh,"_score.bed",sep="")
a<-read.table(real,header=F,sep="\t",comment.char="")
colnames(a)<-c("chr","start","end","gene","snv_score","cnv_score","length","mul_score")
i =1
rand <- paste("/ibios/co02/chen/random_10turns/results/analysis/",coh,"_score_snv",i,".bed",sep="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
colnames(b) <- c("chr","start","end","gene","snv_score")
df1 <- data.frame(a$chr,a$start,a$end,a$snv_score,a$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("chr","start","end","real","gene")
df2$random<-sort(b$snv_score)
df2$var<-df2$real-df2$random
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
ns1 <- df2
write.table(head(ns1[order(-ns1$var),],20),file=paste("/home/hongc/test/qqplottest/qqplot_top_t",i,"_",coh,".txt",sep=""),quote=F,row.names=F)
write.table(head(ns1[order(ns1$var),],20),file=paste("/home/hongc/test/qqplottest/qqplot_bot_t",i,"_",coh,".txt",sep=""),quote=F,row.names=F)
print((ggplot(ns1,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t1"))+geom_dl(aes(label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("smart.grid",cex=0.1))))
(ggplot(ns1,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t1"))+geom_dl(aes(label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("smart.grid",cex=0.1)))
pdf("/home/hongc/test/qqplottest/123.pdf")
dev.off()
print((ggplot(ns1,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t1"))+geom_dl(aes(label=ifelse(var>min(tail(sort(var),20)),as.character(gene),"")),list("smart.grid",cex=0.1))))
library(ggplot2)
library(grid)
library(gridExtra)
library(directlabels)
options(echo=TRUE)
args<-commandArgs(trailingOnly=TRUE)
coh<-"PRAD-US"
real<-"/ibios/co02/chen/casino/promoter/results/analysis/PRAD-US_score.bed"
a<-read.table(real,header=F,sep="\t",comment.char="")
colnames(a)<-c("chr","start","end","gene","snv_score","cnv_score","length","mul_score")
head(a)
colnames(a)<-c("chr","start","end","gene","snv_score")
i =1
rand <- paste("/ibios/co02/chen/random_10turns/results_promoter/analysis/",coh,"_score_snv",i,".bed",sep="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
head(b)
colnames(b) <- c("chr","start","end","gene","snv_score")
df1 <- data.frame(a$chr,a$start,a$end,a$snv_score,a$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("chr","start","end","real","gene")
df2$random<-sort(b$snv_score)
df2$var<-df2$real-df2$random
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
ns1 <- df2
library(ggplot2)
library(grid)
library(gridExtra)
library(directlabels)
coh<-"PRAD-US"
analysis_path="/ibios/co02/chen/casino/results/analysis/"
real<-paste(analysis_path,coh,"_score.bed",sep="")
a<-read.table(real,header=F,sep="\t",comment.char="")
View(a)
colnames(a)<-c("chr","start","end","gene","snv_score","cnv_score","length","mul_score")
View(a)
pdf("/home/honc/test0.pdf")
pdf("/home/hongc/test0.pdf")
for (i in 1:10){
#rand <- paste("/ibios/co02/chen/random_10turns/results/analysis/",coh,"_score_snv",i,".bed",sep="")
rand <- paste("/ibios/co02/chen/random_10turns/results_promoter/analysis/",coh,"_score_snv",i,".bed",sep="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
#b <- b[1,2,3,4,5]
colnames(b) <- c("chr","start","end","gene","snv_score")
df1 <- data.frame(a$chr,a$start,a$end,a$snv_score,a$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("chr","start","end","real","gene")
df2$random<-sort(b$snv_score)
df2$var<-df2$real-df2$random
lims <- c(0,max(range(df2$real)[2],range(df2$random)[2]))
ns1 <- df2
#write.table(head(ns1[order(-ns1$var),],20),file=paste("/home/hongc/test/qqplottest/qqplot_top_t",i,"_",coh,".txt",sep=""),quote=F,row.names=F)
write.table(head(ns1[order(-ns1$var),],50),file=paste(output_path,"/qqplot",i,"_",coh,".txt",sep=""),quote=F,row.names=F,sep="\t")
#write.table(head(ns1[order(ns1$var),],20),file=paste("/home/hongc/test/qqplottest/qqplot_bot_t",i,"_",coh,".txt",sep=""),quote=F,row.names=F)
print((ggplot(ns1,aes(x=random, y=real)) + geom_point() + geom_abline(intercept = 0, slope = 1,color="red")+xlab('random mutation')+ylab('real data')+xlim(lims)+ylim(lims)+ggtitle(paste(coh,"_t1"))+geom_dl(aes(label=ifelse(var>min(tail(sort(var),50)),as.character(gene),"")),list("smart.grid",cex=0.4))))
}
i = 1
rand <- paste("/ibios/co02/chen/random_10turns/results_promoter/analysis/",coh,"_score_snv",i,".bed",sep="")
b <- read.table(rand,header=F,sep="\t",comment.char="")
b <- b[1,2,3,4,5]
head(b)
colnames(b) <- c("chr","start","end","gene","snv_score")
df1 <- data.frame(a$chr,a$start,a$end,a$snv_score,a$gene)
df2 <- df1[ order(df1$a.snv_score), ]
colnames(df2)<-c("chr","start","end","real","gene")
df2$random<-sort(b$snv_score)
dim(b)
dim(df2)
dim(a)
View(b)
View(b)
b <- b[which(b$chr!="X"),]
dim(b)
table(b$chr)
table(a$chr)
setwd("/home/hongc/CaSINo/code/small_tools/sv_test")
cnv<-read.table("test.bed",header=T),comment.char="")
cnv<-read.table("test.bed",header=T,comment.char="")
cnv <- cnv[which(cnv$X.chr!="X"),]
s0 <- cnv[-nrow(cnv),]
genome_length = 3000000000
c1 <- cnv[-c(1,2,3,4)]
ll <- dim(c1)[1] #cnv total length
#cc<-sapply(c1,function(x)((-x[ll]+x-1)/(x[ll]+1))*log(((x+1)/genome_length),base=10))
cc<-sapply(c1,function(x)((-x-1)/(x[ll]+1))*log(((x+1)/genome_length),base=10))
cc2 <- cc[-nrow(cc),]
cc2<-data.frame(cc2)
cc2$sum <- rowSums(cc2)
#normalize cnv score, only for 1.0 version
#cc2$sum <-(cc2$sum-min(cc2$sum))/(max(cc2$sum)-min(cc2$sum))
cnv_scored <- cbind(s0[c(1,2,3,4)],cc2)
#weight and output
#w_snv = 100
#w_cnv = 1
mix_score <- cnv_scored[c(1,2,3,4)]
#mix_score$snv_score <- snv_scored$sum
mix_score$cnv_score <- cnv_scored$sum
colnames(mix_score)<-c("chr","start","end","gene","cv_score")
mix_score$length <- as.numeric(as.character(mix_score$end)) - as.numeric(as.character(mix_score$start))+1
head(mix_score)
##mix_score$score <- (w_snv*snv_scored$sum + w_cnv*cnv_scored$sum)*(1000/(as.numeric(as.character(mix_score$end)) - as.numeric(as.character(mix_score$start))+1))
##mix_score$mul_score <- (w_snv*snv_scored$sum * w_cnv*cnv_scored$sum)
mix_score$fs <- as.numeric(as.character(mix_score$cnv_score))/as.numeric(as.character(mix_score$length))
colnames(mix_score)<-c("chr","start","end","gene","cnv_score")
mix_score$length <- as.numeric(as.character(mix_score$end)) - as.numeric(as.character(mix_score$start))+1
#final score calculated by sum, only for 1.0 version
##mix_score$score <- (w_snv*snv_scored$sum + w_cnv*cnv_scored$sum)*(1000/(as.numeric(as.character(mix_score$end)) - as.numeric(as.character(mix_score$start))+1))
##mix_score$mul_score <- (w_snv*snv_scored$sum * w_cnv*cnv_scored$sum)
mix_score$fs <- as.numeric(as.character(mix_score$cnv_score))/as.numeric(as.character(mix_score$length))
nd <- mix_score[order(-fs),]
nd <- mix_score[order(-mix_score$fs),]
head(nd)
